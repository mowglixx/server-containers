
# 
# Name:  Authentik 
# Description:  Authentication Gateway for OAuth and SSO
# 

services:

  postgresql:
    image: docker.io/library/postgres:16-alpine
    restart: unless-stopped
    container_name: authentik-postgresql
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - data__authentik-postgresql:/var/lib/postgresql/data
    env_file: ./.env.authentik
    environment:
      POSTGRES_PASSWORD: GENERATEYOUROWN
      POSTGRES_USER: GENERATEYOUROWN
      POSTGRES_DB: authentik
  
  
  redis:
    image: docker.io/library/redis:alpine
    container_name: authentik-redis
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - data__authentik-redis:/data
  
  
  server:
    image: ghcr.io/goauthentik/server:2024.6.4
    container_name: authentik-server
    restart: unless-stopped
    networks:
      - frontend
      - backend
    command: server
    environment:
      AUTHENTIK_HOST: http://authentik-server:9000
      AUTHENTIK_HOST_BROWSER: https://auth.YOURDOMAIN.COM
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgresql
      AUTHENTIK_POSTGRESQL__USER: user7afb2
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: GENERATEYOUROWN
      # SMTP Host Emails are sent to
      AUTHENTIK_EMAIL__HOST: smtp.sendgrid.net
      AUTHENTIK_EMAIL__PORT: 465
      # Optionally authenticate (don't add quotation marks to your password)
      AUTHENTIK_EMAIL__USERNAME: apikey
      AUTHENTIK_EMAIL__PASSWORD: GENERATEYOUROWN
      # Use StartTLS
      AUTHENTIK_EMAIL__USE_TLS: true
      # Use SSL
      AUTHENTIK_EMAIL__USE_SSL: true
      AUTHENTIK_EMAIL__TIMEOUT: 10
      # Email address authentik will send from, should have a correct @domain
      AUTHENTIK_EMAIL__FROM: auth@YOURDOMAIN.COM
    volumes:
      - ./media__authentik:/media
      - ./templates__authentik:/templates
    env_file: ./.env.authentik
    depends_on:
      - postgresql
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.authentik.priority=1"
      ## HTTP Services
      - "traefik.http.routers.authentik.entrypoints=websecure"
      - "traefik.http.routers.authentik.rule=Host(`auth.YOURDOMAIN.COM`)"
      - "traefik.http.routers.authentik.tls.certresolver=cf"
      - "traefik.http.routers.authentik.service=authentik"
      - "traefik.http.services.authentik.loadBalancer.server.port=9000"
      ## Individual Application forwardAuth regex (catch any subdomain using individual application forwardAuth)  
      
      - "traefik.http.routers.authentik-outpost.rule=HostRegexp(`{subdomain:[a-z0-9-]+}.YOURDOMAIN.COM`) && PathPrefix(`/outpost.goauthentik.io/`)"
      - "traefik.http.routers.authentik-outpost.entrypoints=websecure"
      - "traefik.http.routers.authentik-outpost.tls.certresolver=cf"
      
      # `server` refers to the service name in the compose file.
      - "traefik.http.middlewares.authentik.forwardauth.address=http://authentik-server:9000/outpost.goauthentik.io/auth/traefik"
      - "traefik.http.middlewares.authentik.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.authentik.forwardauth.authResponseHeaders=X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid,X-authentik-jwt,X-authentik-meta-jwks,X-authentik-meta-outpost,X-authentik-meta-provider,X-authentik-meta-app,X-authentik-meta-version"

  worker:
    image: ghcr.io/goauthentik/server:2024.6.4
    restart: unless-stopped
    container_name: authentik-worker
    command: worker
    user: root
    networks:
      - frontend
      - backend
    environment:
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgresql
      AUTHENTIK_POSTGRESQL__USER: GENERATEYOUROWN
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: GENERATEYOUROWN
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./media__authentik:/media
      - ./certs__authentik:/certs
      - ./templates__authentik:/templates
    env_file: ./.env.authentik
    depends_on:
      - postgresql
      - redis


volumes:
  data__authentik-postgresql:
    driver: local
  data__authentik-redis:
    driver: local

networks:
  frontend:
    external: true
  backend:
    external: true